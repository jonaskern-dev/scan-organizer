name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Get Version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Build App Bundle
        run: |
          swift build -c release --product ScanOrganizerApp

      - name: Create App Bundle
        run: |
          APP_NAME="Scan Organizer.app"
          APP_DIR="ScanOrganizer.app"
          CONTENTS_DIR="$APP_DIR/Contents"
          MACOS_DIR="$CONTENTS_DIR/MacOS"
          RESOURCES_DIR="$CONTENTS_DIR/Resources"

          mkdir -p "$MACOS_DIR"
          mkdir -p "$RESOURCES_DIR"

          cp .build/release/ScanOrganizerApp "$MACOS_DIR/ScanOrganizer"
          cp assets/ScanOrganizer.icns "$RESOURCES_DIR/AppIcon.icns"

          # Create proper Info.plist with actual values
          VERSION=${GITHUB_REF#refs/tags/v}
          /usr/libexec/PlistBuddy -c "Add :CFBundleExecutable string ScanOrganizer" "$CONTENTS_DIR/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :CFBundleIdentifier string com.jonaskern.scanorganizer" "$CONTENTS_DIR/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :CFBundleName string 'Scan Organizer'" "$CONTENTS_DIR/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :CFBundleDisplayName string 'Scan Organizer'" "$CONTENTS_DIR/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :CFBundleVersion string $VERSION" "$CONTENTS_DIR/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :CFBundleShortVersionString string $VERSION" "$CONTENTS_DIR/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :CFBundlePackageType string APPL" "$CONTENTS_DIR/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :CFBundleIconFile string AppIcon" "$CONTENTS_DIR/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :LSMinimumSystemVersion string 14.0" "$CONTENTS_DIR/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :NSHighResolutionCapable bool true" "$CONTENTS_DIR/Info.plist"

      - name: Create ZIP Archive
        run: |
          VERSION=${{ steps.version.outputs.version }}
          zip -r "ScanOrganizer-${VERSION}.zip" "ScanOrganizer.app"

      - name: Calculate SHA256
        id: sha
        run: |
          VERSION=${{ steps.version.outputs.version }}
          SHA256=$(shasum -a 256 "ScanOrganizer-${VERSION}.zip" | cut -d' ' -f1)
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT
          echo "SHA256: $SHA256"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ScanOrganizer-${{ steps.version.outputs.version }}.zip
          body: |
            ## Scan Organizer v${{ steps.version.outputs.version }}

            ### Installation

            #### Via Homebrew
            ```bash
            brew install jonaskern-dev/tap/scan-organizer
            ```

            #### Manual Installation
            1. Download ScanOrganizer-${{ steps.version.outputs.version }}.zip
            2. Unzip and move to Applications folder
            3. Install Ollama and required models:
               ```bash
               ollama pull granite3.2-vision:2b
               ollama pull granite3.3:2b
               ```

            ### SHA256
            ```
            ${{ steps.sha.outputs.sha256 }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Homebrew Tap
        env:
          TAP_TOKEN: ${{ secrets.TAP_UPDATE_TOKEN }}
        run: |
          VERSION=${{ steps.version.outputs.version }}
          SHA256=${{ steps.sha.outputs.sha256 }}

          echo "Updating Homebrew tap to v$VERSION with SHA256: $SHA256"

          # Clone tap repository
          git clone https://$TAP_TOKEN@github.com/jonaskern-dev/homebrew-tap.git tap-repo
          cd tap-repo

          # Configure git
          git config user.email "action@github.com"
          git config user.name "GitHub Action"

          # Update cask file
          CASK_FILE="Casks/scan-organizer.rb"
          sed -i '' "s/version \".*\"/version \"${VERSION}\"/" "$CASK_FILE"
          sed -i '' "s/sha256 \".*\"/sha256 \"${SHA256}\"/" "$CASK_FILE"

          # Verify changes
          echo "Updated cask:"
          grep -A1 "version\|sha256" "$CASK_FILE" | head -4

          # Commit and push
          git add "$CASK_FILE"
          git commit -m "chore: update scan-organizer to v${VERSION}"
          git push

          echo "Successfully updated scan-organizer cask to version ${VERSION}"
